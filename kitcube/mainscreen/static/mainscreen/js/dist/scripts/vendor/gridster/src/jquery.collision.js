/*
 * jquery.collision
 * https://github.com/ducksboard/gridster.js
 *
 * Copyright (c) 2012 ducksboard
 * Licensed under the MIT licenses.
 */

(function(e,t,n,r){function s(t,n,r){this.options=e.extend(i,r),this.$element=t,this.last_colliders=[],this.last_colliders_coords=[],this.set_colliders(n),this.init()}var i={colliders_context:n.body,overlapping_region:"C"},o=s.prototype;o.init=function(){this.find_collisions()},o.overlaps=function(e,t){var n=!1,r=!1;if(t.x1>=e.x1&&t.x1<=e.x2||t.x2>=e.x1&&t.x2<=e.x2||e.x1>=t.x1&&e.x2<=t.x2)n=!0;if(t.y1>=e.y1&&t.y1<=e.y2||t.y2>=e.y1&&t.y2<=e.y2||e.y1>=t.y1&&e.y2<=t.y2)r=!0;return n&&r},o.detect_overlapping_region=function(e,t){var n="",r="";return e.y1>t.cy&&e.y1<t.y2&&(n="N"),e.y2>t.y1&&e.y2<t.cy&&(n="S"),e.x1>t.cx&&e.x1<t.x2&&(r="W"),e.x2>t.x1&&e.x2<t.cx&&(r="E"),n+r||"C"},o.calculate_overlapped_area_coords=function(t,n){var r=Math.max(t.x1,n.x1),i=Math.max(t.y1,n.y1),s=Math.min(t.x2,n.x2),o=Math.min(t.y2,n.y2);return e({left:r,top:i,width:s-r,height:o-i}).coords().get()},o.calculate_overlapped_area=function(e){return e.width*e.height},o.manage_colliders_start_stop=function(t,n,r){var i=this.last_colliders_coords;for(var s=0,o=i.length;s<o;s++)e.inArray(i[s],t)===-1&&n.call(this,i[s]);for(var u=0,a=t.length;u<a;u++)e.inArray(t[u],i)===-1&&r.call(this,t[u])},o.find_collisions=function(t){var n=this,r=this.options.overlapping_region,i=[],s=[],o=this.colliders||this.$colliders,u=o.length,a=n.$element.coords().update(t||!1).get();while(u--){var f=n.$colliders?e(o[u]):o[u],l=f.isCoords?f:f.coords(),c=l.get(),h=n.overlaps(a,c);if(!h)continue;var p=n.detect_overlapping_region(a,c);if(p===r||r==="all"){var d=n.calculate_overlapped_area_coords(a,c),v=n.calculate_overlapped_area(d),m={area:v,area_coords:d,region:p,coords:c,player_coords:a,el:f};n.options.on_overlap&&n.options.on_overlap.call(this,m),i.push(l),s.push(m)}}return(n.options.on_overlap_stop||n.options.on_overlap_start)&&this.manage_colliders_start_stop(i,n.options.on_overlap_start,n.options.on_overlap_stop),this.last_colliders_coords=i,s},o.get_closest_colliders=function(e){var t=this.find_collisions(e);return t.sort(function(e,t){return e.region==="C"&&t.region==="C"?e.coords.y1<t.coords.y1||e.coords.x1<t.coords.x1?-1:1:e.area<t.area?1:1}),t},o.set_colliders=function(t){typeof t=="string"||t instanceof e?this.$colliders=e(t,this.options.colliders_context).not(this.$element):this.colliders=e(t)},e.fn.collision=function(e,t){return new s(this,e,t)}})(jQuery,window,document);