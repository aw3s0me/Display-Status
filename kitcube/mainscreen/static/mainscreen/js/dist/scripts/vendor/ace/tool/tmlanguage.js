function logDebug(e,t){console.log(e,t)}function processRules(e){return e.patterns&&(states.start=processPatterns(e.patterns)),e.repository&&processRepository(e.repository),states}function processRepository(e){for(var t in e){var n=e[t];if(n.begin)var r=[processPattern(e[t])];else if(n.patterns&&!n.repository)var r=processPatterns(n.patterns);else var r=[processPattern(e[t])];r&&(states["#"+t]=r)}}function processPatterns(e){return e.map(processPattern)}function processPattern(e){if(e.end=="(?!\\G)"&&e.patterns&&e.patterns.length==1)var t=processPattern(e.patterns[0]);else if(e.begin&&e.end){var t=simpleRule(e.begin,e.name,e.beginCaptures||e.captures),n=processPatterns(e.patterns||[]),r=simpleRule(e.end,e.name,e.endCaptures||e.captures);r.next="pop",n.push(r),(e.name||e.contentName)&&n.push({defaultToken:e.name||e.contentName}),t.push=n}else if(e.match)var t=simpleRule(e.match,e.name,e.captures);else if(e.include)var t={include:e.include};return e.comment&&(t.comment=(t.comment||"")+e.comment),e.repository&&processRepository(e.repository),t}function simpleRule(e,t,n){t=t||"text";var r={},i=e;e=transformRegExp(e,r);if(n){var s=[];Object.keys(n).forEach(function(e){s[e]=n[e]&&n[e].name});if(s.length==1)t=s[0];else{for(var o=0;o<s.length;o++)s[o]||(s[o]=t);t=s,r.todo="fix grouping"}}try{new RegExp(e)}catch(u){r.TODO="FIXME: regexp doesn't have js equivalent",r.originalRegex=i}return r.token=t,r.regex=e,r}function removeXFlag(e){return e&&e.slice(0,4)=="(?x)"&&(e=e.replace(/\\.|\[([^\]\\]|\\.)*?\]|\s+|(?:#[^\n]*)/g,function(e){return e[0]=="["?e:e[0]=="\\"?/[#\s]/.test(e[1])?e[1]:e:""}).substr(4)),e}function transformRegExp(e,t){return e=removeXFlag(e),e=e.replace(/\\n(?!\?).?/g,"$"),/\(\?[i]\:|\(?\w*i\w*\)/g.test(e)&&(e=e.replace(/\(\?[ims\-]\:/g,"(?:"),e=e.replace(/\(\?[imsx\-]\)/g,""),t&&(t.caseInsensitive=!0)),e=e.replace(/(\\[xu]){([a-fA-F\d]+)}/g,"$1$2"),e}function extractPatterns(e){var t=processRules(e);return lib.restoreJSONComments(lib.formatJSON(t,"    "))}function convertLanguageFile(e){var t=/^(\/|\w:)/.test(e)?e:process.cwd()+"/"+e,n=fs.readFileSync(t,"utf8");parseLanguage(n,function(t){var n=t.name.replace(/[-_]/g,"").toLowerCase(),r=t.name.replace(/-/g,""),i=__dirname+"/../lib/ace/mode/"+n+"_highlight_rules.js",s=__dirname+"/../lib/ace/mode/"+n+".js";console.log("Converting "+e+" to "+i),devMode&&(console.log(util.inspect(t.patterns,!1,4)),console.log(util.inspect(t.repository,!1,4)));var o=lib.fillTemplate(modeTemplate,{language:r,languageHighlightFilename:n}),u=extractPatterns(t),a=lib.fillTemplate(modeHighlightTemplate,{language:r,languageTokens:u.trim(),uuid:t.uuid,name:e});devMode?(console.log(o),console.log(a),console.log("Not writing, 'cause we're in dev mode, baby.")):(fs.writeFileSync(i,a),fs.writeFileSync(s,o))})}var fs=require("fs"),util=require("util"),lib=require("./lib"),parseLanguage=lib.parsePlist,states={start:[]},stateName="start",modeTemplate=fs.readFileSync(__dirname+"/mode.tmpl.js","utf8"),modeHighlightTemplate=fs.readFileSync(__dirname+"/mode_highlight_rules.tmpl.js","utf8"),args=process.argv.splice(2),tmLanguageFile=args[0],devMode=args[1];tmLanguageFile===undefined&&(console.error("Please pass in a language file via the command line."),process.exit(1)),convertLanguageFile(tmLanguageFile);