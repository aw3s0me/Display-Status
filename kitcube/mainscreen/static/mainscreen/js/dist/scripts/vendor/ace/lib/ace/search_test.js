/* ***** BEGIN LICENSE BLOCK *****
 * Distributed under the BSD license:
 *
 * Copyright (c) 2010, Ajax.org B.V.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Ajax.org B.V. nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * ***** END LICENSE BLOCK ***** */

typeof process!="undefined"&&require("amd-loader"),define(["require","exports","module","./edit_session","./search","./test/assertions"],function(e,t,n){var r=e("./edit_session").EditSession,i=e("./search").Search,s=e("./test/assertions");n.exports={"test: configure the search object":function(){var e=new i;e.set({needle:"juhu"})},"test: find simple text in document":function(){var e=new r(["juhu kinners 123","456"]),t=(new i).set({needle:"kinners"}),n=t.find(e);s.position(n.start,0,5),s.position(n.end,0,12)},"test: find simple text in next line":function(){var e=new r(["abc","juhu kinners 123","456"]),t=(new i).set({needle:"kinners"}),n=t.find(e);s.position(n.start,1,5),s.position(n.end,1,12)},"test: find text starting at cursor position":function(){var e=new r(["juhu kinners","juhu kinners 123"]);e.getSelection().moveCursorTo(0,6);var t=(new i).set({needle:"kinners"}),n=t.find(e);s.position(n.start,1,5),s.position(n.end,1,12)},"test: wrap search is on by default":function(){var e=new r(["abc","juhu kinners 123","456"]);e.getSelection().moveCursorTo(2,1);var t=(new i).set({needle:"kinners"});s.notEqual(t.find(e),null)},"test: wrap search should wrap at file end":function(){var e=new r(["abc","juhu kinners 123","456"]);e.getSelection().moveCursorTo(2,1);var t=(new i).set({needle:"kinners",wrap:!0}),n=t.find(e);s.position(n.start,1,5),s.position(n.end,1,12)},"test: wrap search should find needle even if it starts inside it":function(){var e=new r(["abc","juhu kinners 123","456"]);e.getSelection().moveCursorTo(6,1);var t=(new i).set({needle:"kinners",wrap:!0}),n=t.find(e);s.position(n.start,1,5),s.position(n.end,1,12)},"test: wrap search with no match should return 'null'":function(){var e=new r(["abc","juhu kinners 123","456"]);e.getSelection().moveCursorTo(2,1);var t=(new i).set({needle:"xyz",wrap:!0});s.equal(t.find(e),null)},"test: case sensitive is by default off":function(){var e=new r(["abc","juhu kinners 123","456"]),t=(new i).set({needle:"JUHU"});s.range(t.find(e),1,0,1,4)},"test: case sensitive search":function(){var e=new r(["abc","juhu kinners 123","456"]),t=(new i).set({needle:"KINNERS",caseSensitive:!0}),n=t.find(e);s.equal(n,null)},"test: whole word search should not match inside of words":function(){var e=new r(["juhukinners","juhu kinners 123","456"]),t=(new i).set({needle:"kinners",wholeWord:!0}),n=t.find(e);s.position(n.start,1,5),s.position(n.end,1,12)},"test: find backwards":function(){var e=new r(["juhu juhu juhu juhu"]);e.getSelection().moveCursorTo(0,10);var t=(new i).set({needle:"juhu",backwards:!0}),n=t.find(e);s.position(n.start,0,5),s.position(n.end,0,9)},"test: find in selection":function(){var e=new r(["juhu","juhu","juhu","juhu"]);e.getSelection().setSelectionAnchor(1,0),e.getSelection().selectTo(3,5);var t=(new i).set({needle:"juhu",wrap:!0,range:e.getSelection().getRange()}),n=t.find(e);s.position(n.start,1,0),s.position(n.end,1,4),t=(new i).set({needle:"juhu",wrap:!0,range:e.getSelection().getRange()}),e.getSelection().setSelectionAnchor(0,2),e.getSelection().selectTo(3,2);var n=t.find(e);s.position(n.start,1,0),s.position(n.end,1,4)},"test: find backwards in selection":function(){var e=new r(["juhu","juhu","juhu","juhu"]);e.getSelection().setSelectionAnchor(0,2),e.getSelection().selectTo(3,2);var t=(new i).set({needle:"juhu",wrap:!0,backwards:!0,range:e.getSelection().getRange()}),n=t.find(e);s.position(n.start,2,0),s.position(n.end,2,4),t=(new i).set({needle:"juhu",wrap:!0,range:e.getSelection().getRange()}),e.getSelection().setSelectionAnchor(0,2),e.getSelection().selectTo(1,2);var n=t.find(e);s.position(n.start,1,0),s.position(n.end,1,4)},"test: edge case - match directly before the cursor":function(){var e=new r(["123","123","juhu"]),t=(new i).set({needle:"juhu",wrap:!0});e.getSelection().moveCursorTo(2,5);var n=t.find(e);s.position(n.start,2,0),s.position(n.end,2,4)},"test: edge case - match backwards directly after the cursor":function(){var e=new r(["123","123","juhu"]),t=(new i).set({needle:"juhu",wrap:!0,backwards:!0});e.getSelection().moveCursorTo(2,0);var n=t.find(e);s.position(n.start,2,0),s.position(n.end,2,4)},"test: find using a regular expression":function(){var e=new r(["abc123 123 cd","abc"]),t=(new i).set({needle:"\\d+",regExp:!0}),n=t.find(e);s.position(n.start,0,3),s.position(n.end,0,6)},"test: find using a regular expression and whole word":function(){var e=new r(["abc123 123 cd","abc"]),t=(new i).set({needle:"\\d+\\b",regExp:!0,wholeWord:!0}),n=t.find(e);s.position(n.start,0,7),s.position(n.end,0,10)},"test: use regular expressions with capture groups":function(){var e=new r(["  ab: 12px","  <h1 abc"]),t=(new i).set({needle:"(\\d+)",regExp:!0}),n=t.find(e);s.position(n.start,0,6),s.position(n.end,0,8)},"test: find all matches in selection":function(){var e=new r(["juhu","juhu","juhu","juhu"]);e.getSelection().setSelectionAnchor(0,2),e.getSelection().selectTo(3,2);var t=(new i).set({needle:"uh",wrap:!0,range:e.getSelection().getRange()}),n=t.findAll(e);s.equal(n.length,2),s.position(n[0].start,1,1),s.position(n[0].end,1,3),s.position(n[1].start,2,1),s.position(n[1].end,2,3)},"test: find all multiline matches":function(){var e=new r(["juhu","juhu","juhu","juhu"]),t=(new i).set({needle:"hu\nju",wrap:!0}),n=t.findAll(e);s.equal(n.length,3),s.position(n[0].start,0,2),s.position(n[0].end,1,2),s.position(n[1].start,1,2),s.position(n[1].end,2,2)},"test: replace() should return the replacement if the input matches the needle":function(){var e=(new i).set({needle:"juhu"});s.equal(e.replace("juhu","kinners"),"kinners"),s.equal(e.replace("","kinners"),null),s.equal(e.replace(" juhu","kinners"),null),s.equal(e.replace("Juhu","kinners"),"kinners"),e.set({caseSensitive:!0}),s.equal(e.replace("Juhu","kinners"),null)},"test: replace with a RegExp search":function(){var e=(new i).set({needle:"\\d+",regExp:!0});s.equal(e.replace("123","kinners"),"kinners"),s.equal(e.replace("01234","kinners"),"kinners"),s.equal(e.replace("","kinners"),null),s.equal(e.replace("a12","kinners"),null),s.equal(e.replace("12a","kinners"),null)},"test: replace with RegExp match and capture groups":function(){var e=(new i).set({needle:"ab(\\d\\d)",regExp:!0});s.equal(e.replace("ab12","cd$1"),"cd12"),s.equal(e.replace("ab12","-$&-"),"-ab12-"),s.equal(e.replace("ab12","$$"),"$")},"test: find all using regular expresion containing $":function(){var e=new r(["a","     b","c ","d"]),t=(new i).set({needle:"[ ]+$",regExp:!0,wrap:!0});e.getSelection().moveCursorTo(1,2);var n=t.findAll(e);s.equal(n.length,1),s.position(n[0].start,2,1),s.position(n[0].end,2,2)},"test: find all matches in a line":function(){var e=new r("foo bar foo baz foobar foo"),t=(new i).set({needle:"foo",wrap:!0,wholeWord:!0});e.getSelection().moveCursorTo(0,4);var n=t.findAll(e);s.equal(n.length,3),s.position(n[0].start,0,0),s.position(n[0].end,0,3),s.position(n[1].start,0,8),s.position(n[1].end,0,11),s.position(n[2].start,0,23),s.position(n[2].end,0,26)},"test: find all matches in a line backwards":function(){var e=new r("foo bar foo baz foobar foo"),t=(new i).set({needle:"foo",wrap:!0,wholeWord:!0,backwards:!0});e.getSelection().moveCursorTo(0,13);var n=t.findAll(e);s.equal(n.length,3),s.position(n[2].start,0,23),s.position(n[2].end,0,26),s.position(n[1].start,0,8),s.position(n[1].end,0,11),s.position(n[0].start,0,0),s.position(n[0].end,0,3)}}}),typeof module!="undefined"&&module===require.main&&require("asyncjs").test.testcase(module.exports).exec();